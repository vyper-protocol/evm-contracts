/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockOracleAdapter,
  MockOracleAdapterInterface,
} from "../../../contracts/rate/MockOracleAdapter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "prices",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_newPrice",
        type: "int256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600060025534801561001557600080fd5b5061001f33610024565b610074565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610313806100836000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063b94fe91714610091578063bc31c1c1146100c8578063e9ba4f37146100f6578063f2fde38b14610109575b600080fd5b61006f61011c565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100b361009f366004610272565b600090815260016020526040902054904290565b60408051928352602083019190915201610088565b6100e86100d6366004610272565b60016020526000908152604090205481565b604051908152602001610088565b61006f61010436600461028b565b610130565b61006f6101173660046102ad565b61014a565b6101246101c8565b61012e6000610222565b565b6101386101c8565b60009182526001602052604090912055565b6101526101c8565b6001600160a01b0381166101bc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6101c581610222565b50565b6000546001600160a01b0316331461012e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101b3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561028457600080fd5b5035919050565b6000806040838503121561029e57600080fd5b50508035926020909101359150565b6000602082840312156102bf57600080fd5b81356001600160a01b03811681146102d657600080fd5b939250505056fea2646970667358221220f0e44281c9dc90024583fcb338d128fa763d9b2564850e83b069964dc92cfe5a64736f6c63430008110033";

type MockOracleAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockOracleAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockOracleAdapter__factory extends ContractFactory {
  constructor(...args: MockOracleAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockOracleAdapter> {
    return super.deploy(overrides || {}) as Promise<MockOracleAdapter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockOracleAdapter {
    return super.attach(address) as MockOracleAdapter;
  }
  override connect(signer: Signer): MockOracleAdapter__factory {
    return super.connect(signer) as MockOracleAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockOracleAdapterInterface {
    return new utils.Interface(_abi) as MockOracleAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockOracleAdapter {
    return new Contract(address, _abi, signerOrProvider) as MockOracleAdapter;
  }
}
